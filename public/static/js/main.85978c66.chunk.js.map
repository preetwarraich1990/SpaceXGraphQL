{"version":3,"sources":["logo.png","components/LaunchView.js","components/MissionKey.js","components/Launches.js","components/Mission.js","App.js","reportWebVitals.js","index.js"],"names":["launchView","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","missionKey","LAUNCHES_QUERY","gql","launches","query","loading","error","data","console","log","map","LAUNCH_QUERY","mission","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","Launches","Mission","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85978c66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.363cc1bf.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nexport default function launchView({ launch: { flight_number, mission_name, launch_date_local, launch_success}}) {\n    \n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: <span className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                    })}>{ mission_name }</span></h4>\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment></p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import React from 'react'\n\nexport default function missionKey() {\n    return (\n        <div className=\"my-3\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Failure\n            </p>\n        </div>\n    )\n}\n\n\n","import React, { Fragment } from \"react\";\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nimport LaunchView from \"./LaunchView\";\nimport MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nexport default function launches() {\n  return (\n    <Fragment>\n      <h1 className=\"display-4 my-3\">Launches</h1>\n      <MissionKey />\n      <Query query={LAUNCHES_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n\n          return (\n            <Fragment>\n              {data.launches.map((launch) => (\n                <LaunchView key={launch.flight_number} launch={launch} />\n              ))}\n            </Fragment>\n          );\n        }}\n      </Query>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql\n`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nexport default function mission(props) {\n  let { flight_number } = props.match.params;\n  flight_number = parseInt(flight_number);\n  return (\n    <Fragment>\n      <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n\n          const {\n            mission_name,\n            flight_number,\n            launch_year,\n            launch_success,\n            rocket: { rocket_id, rocket_name, rocket_type },\n          } = data.launch;\n          return (\n            <div>\n              <h1 className=\"display-4 my-3\">\n                <span className=\"text-dark\">Mission:</span> {mission_name}\n              </h1>\n              <h4 className=\"mb-3\">Launch Details</h4>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  Flight Number: {flight_number}\n                </li>\n              </ul>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n              </ul>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  Launch Success:{\" \"}\n                  <span\n                    className={classNames({\n                      \"text-success\": launch_success,\n                      \"text-danger\": !launch_success,\n                    })}\n                  >\n                    {launch_success ? \"Yes\" : \"No\"}\n                  </span>\n                </li>\n              </ul>\n\n              <h4 className=\"my-3\">Rocket Details</h4>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n              </ul>\n              <hr/>\n              <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n            </div>\n          );\n        }}\n      </Query>\n    </Fragment>\n  );\n}\n","import ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport logo from \"./logo.png\";\n\nimport Launches from \"./components/Launches\";\nimport Mission from \"./components/Mission\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\",\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: \"block\", margin: \"auto\" }}\n          />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Mission} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}